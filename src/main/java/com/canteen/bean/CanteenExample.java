package com.canteen.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CanteenExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    /*用途：存储 SQL 中的 ORDER BY 子句
    作用：指定查询结果的排序方式*/
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    /*用途：标识查询结果是否需要去重
作用：如果设置为 true，则查询结果会去除重复的记录*/
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    /*用途：存储多组查询条件
作用：可以存储多组查询条件，实现复杂的查询逻辑，比如使用 OR 连接不同的查询条件*/
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */

    public CanteenExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    /*
    向 oredCriteria 列表中添加一个 Criteria 对象，表示 OR 连接
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    /*作用：创建一个新的 Criteria 对象并添加到 oredCriteria 列表中，表示 OR 连接*/
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    /*清空所有的查询条件，包括 orderByClause、distinct 和 oredCriteria*/
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    /*静态内部类 GeneratedCriteria，用于生成 SQL 查询语句中的 WHERE 子句的条件。*/
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andCanteenidIsNull() {
            addCriterion("CanteenID is null");
            return (Criteria) this;
        }

        public Criteria andCanteenidIsNotNull() {
            addCriterion("CanteenID is not null");
            return (Criteria) this;
        }

        public Criteria andCanteenidEqualTo(Integer value) {
            addCriterion("CanteenID =", value, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidNotEqualTo(Integer value) {
            addCriterion("CanteenID <>", value, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidGreaterThan(Integer value) {
            addCriterion("CanteenID >", value, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidGreaterThanOrEqualTo(Integer value) {
            addCriterion("CanteenID >=", value, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidLessThan(Integer value) {
            addCriterion("CanteenID <", value, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidLessThanOrEqualTo(Integer value) {
            addCriterion("CanteenID <=", value, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidIn(List<Integer> values) {
            addCriterion("CanteenID in", values, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidNotIn(List<Integer> values) {
            addCriterion("CanteenID not in", values, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidBetween(Integer value1, Integer value2) {
            addCriterion("CanteenID between", value1, value2, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteenidNotBetween(Integer value1, Integer value2) {
            addCriterion("CanteenID not between", value1, value2, "canteenid");
            return (Criteria) this;
        }

        public Criteria andCanteennameIsNull() {
            addCriterion("CanteenName is null");
            return (Criteria) this;
        }

        public Criteria andCanteennameIsNotNull() {
            addCriterion("CanteenName is not null");
            return (Criteria) this;
        }

        public Criteria andCanteennameEqualTo(String value) {
            addCriterion("CanteenName =", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameNotEqualTo(String value) {
            addCriterion("CanteenName <>", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameGreaterThan(String value) {
            addCriterion("CanteenName >", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameGreaterThanOrEqualTo(String value) {
            addCriterion("CanteenName >=", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameLessThan(String value) {
            addCriterion("CanteenName <", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameLessThanOrEqualTo(String value) {
            addCriterion("CanteenName <=", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameLike(String value) {
            addCriterion("CanteenName like", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameNotLike(String value) {
            addCriterion("CanteenName not like", value, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameIn(List<String> values) {
            addCriterion("CanteenName in", values, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameNotIn(List<String> values) {
            addCriterion("CanteenName not in", values, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameBetween(String value1, String value2) {
            addCriterion("CanteenName between", value1, value2, "canteenname");
            return (Criteria) this;
        }

        public Criteria andCanteennameNotBetween(String value1, String value2) {
            addCriterion("CanteenName not between", value1, value2, "canteenname");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("Location is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("Location is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("Location =", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("Location <>", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("Location >", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("Location >=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("Location <", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("Location <=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("Location like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("Location not like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("Location in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("Location not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("Location between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("Location not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("StartTime is null");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("StartTime is not null");
            return (Criteria) this;
        }

        public Criteria andStarttimeEqualTo(Date value) {
            addCriterionForJDBCTime("StartTime =", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("StartTime <>", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThan(Date value) {
            addCriterionForJDBCTime("StartTime >", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("StartTime >=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThan(Date value) {
            addCriterionForJDBCTime("StartTime <", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("StartTime <=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeIn(List<Date> values) {
            addCriterionForJDBCTime("StartTime in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("StartTime not in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("StartTime between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("StartTime not between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("EndTime is null");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("EndTime is not null");
            return (Criteria) this;
        }

        public Criteria andEndtimeEqualTo(Date value) {
            addCriterionForJDBCTime("EndTime =", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("EndTime <>", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThan(Date value) {
            addCriterionForJDBCTime("EndTime >", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("EndTime >=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThan(Date value) {
            addCriterionForJDBCTime("EndTime <", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("EndTime <=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIn(List<Date> values) {
            addCriterionForJDBCTime("EndTime in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("EndTime not in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("EndTime between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("EndTime not between", value1, value2, "endtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Canteen
     *
     * @mbg.generated do_not_delete_during_merge
     */
    /*Criteria 类继承了 GeneratedCriteria 类，用于生成 SQL 查询语句中的 WHERE 子句的条件。*/
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Canteen
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }
        /*Criterion 类则用于表示一个查询条件，包含了查询条件的类型、值等信息。*/
        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}



